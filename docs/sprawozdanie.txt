Wstęp teoretyczny:
Dostarczone oprogramowanie ma na celu ułatwienie prowadzenia rejestracji hotelu. Aplikacja została stworzona do działania w systemie Windows. Nie wymaga ona instalacji.

Standardy kodowania:
- podział projektu na małe, czytelne pliki
- podział plików źródłowych na lokalizacje: classes, definitions, helpers
- zmienne, funkcje, obiekty, instancje klas: camelCase
- klasy, stałe, obiekty definiujące: PascalCase
- UI po polsku

Standardy dokumentowania:
- jako komentarze inline w kodzie
- komentarze po polsku

Język implementacji i IDE:
- Python 3.9.6 (wymagana wersja 3.6+)
- Visual Studio 2022 
- wykorzystanie biblioteki Enum na potrzeby definiowania stałych
Uzasadnienie:
- Python jest jednym z języków najszybciej zdobywających popularność w ostatnich latach.
- Jest warty nauczenia się. Głównie wykorzystywany do celów naukowych, m.in. AI.
- Prosta syntaktyka w porównaniu do rodziny C.
- Brak typowania zmiennych.
- Niejawne przekazywanie wskaźników do funkcji/metod.
- Rozbudowana ale łatwa obiektowość: konwersje typów, przeciążanie operatorów.
- Zaawansowane funkcje języka: f-stringi, współdzielona pamięć procesu, funkcja sleep, anonimowe funkcje lambda.
- Visual Studio 2022 jest darmowym środowikiem.
- Platforma uniwersalna systemu Windows, systemy iOS i Android.
- Umożliwia współpracę na kodem za pomoca usługi Git.
- Łatwa integracja z aplikacją GitHub.

Wykorzystanie repozytorium:
- GitHub
- tablica kanban do zarządzania zadaniami https://github.com/michal7954/io-project/projects/1
- nazwy commitów i branchy po polsku
- commity na bieżąco jako pojedyncze podzadanie/samodzielna całość
- nowy branch na każdą większą funkcjonalność
- automatyczne mergowanie pool requestów do głównego brancha
- code review na bieżąco z historii commitów

Informacje o zaimplemetowanych testach jednostkowych:
- Testy zostały zaimplementowane w celu sprawdzenia poprawności działania pojedynczych elementów kodu.
- Testom poddawane są poszczególne funkcjonalności klas Date, Reservation, Service, Store. 
- Testowana jest poprawność wprowadzanych danych podczas rezerwacji czy odpowiadają one założeniom technicznym.
- Testowana jest poprawność wprowadzonych dat, czy nie wykraczają one poza zakres możliwych.
- Testowana jest poprawność danych wprowadzonych przez użytkownika, czy została ona wprowadzono prawidłowo, czy nie wykracza poza zakres czasowy. 
- Testowana jest poprawność danych w Store.
- Wykorzystany został eksplorator testów dostępny w Visual Studio.
- Zaimplementowano łącznie 44 testy. 
- Testy są umieszczone w osobnym pliku.


TDD (przykładowe cykle):
Cykl 1:
1.Class TestReservation
 https://github.com/michal7954/io-project/commit/90dbff8963f0cb2a067e63c9ca92c80804e09c7c 

2.Oznacz Opłaconą + sprawdźStatusPłatności (odroczenie płatności)
https://github.com/michal7954/io-project/commit/22c5380870e6cb75eed872088385d3ae50e33872

3.Refaktoryzacja  
https://github.com/michal7954/io-project/commit/01adb6c9cc5c25ae9be0c12e408b3b41598bc06d
  

Cykl 2:
1.Class TestReservation
 https://github.com/michal7954/io-project/commit/90dbff8963f0cb2a067e63c9ca92c80804e09c7c 

2.Oznacz Opłaconą + sprawdźStatusPłatności (Sprawdzenie statusu płatności)
https://github.com/michal7954/io-project/commit/22c5380870e6cb75eed872088385d3ae50e33872

3.Refaktoryzacja sprawdzenia statusu płatności https://github.com/michal7954/io-project/commit/a01406f792239da5050bcd046184084e1aa5c63a

Cykl 3:
1.Class TestReservation 
https://github.com/michal7954/io-project/commit/90dbff8963f0cb2a067e63c9ca92c80804e09c7c  

2.Zapisanie metody płatności
https://github.com/michal7954/io-project/commit/0e2369dcfb8333a94a3f7f74be731422d6dfe8a7

3.Refaktoryzacja zapisania metody płatności 
https://github.com/michal7954/io-project/commit/a01406f792239da5050bcd046184084e1aa5c63a

Każdy podmiot posiada pewne uprawnienia do wykonywania operacji w hotelu:
Użytkownik (potencjalny klient):
-listRooms: Wyświetl listę pokoi,
-addReservation : Utwórz rezerwację, 
-cancelReservation : Anuluj rezerwację - umożliwia anulowanie rezerwacji poprzez podanie ID,
-findAvailable : Wyświetl pokoje dostępne w zadanym terminie,
-logout : Wyloguj i wybierz nowego użytkownika. 

Gość hotelu:
-orderTide : Zamów sprzątanie pokoju,
-orderrBeakfast : Zamów śniadanie do pokoju,
-orderConservator : Zamów konserwatora,
-logout : Wyloguj i wybierz nowego użytkownika. 

Pracownik recepcji hotelu:
-listRooms: Wyświetl listę pokoi 
-addReservation : Utwórz rezerwację.
-listReservations : Wyświetl listę rezerwacji, 
-cancelReservation : Anuluj rezerwację ,
-accommdate : Zamelduj,
-checkOut : Wymelduj,
-pay : Zapłać,
-checkPaymentStatus : Sprawdź status płatności rezerwacji,
-listServices : Wyświetl listę usług,
-findAvailable : Wyświetl pokoje dostępne w zadanym terminie,
-setDone : Oznacz usługę jako wykonaną,
-logout : Wyloguj i wybierz nowego użytkownika. 

Administrator systemu/ menedżer hotelu:
-addRoom : Dodaj pokój,
-modifyRoom : Zmodyfikuj pokój
-removeRoom : Usuń pokój,
-listRooms : Wyświetl listę pokoi
-listReservations : Wyświetl listę rezerwacji,
-listServices : Wyświetl listę usług,
-logout : Wyloguj i wybierz nowego użytkownika. 


Wprowadzenie innych danych niż powyższe identyfikatory lub przypisanych im numerów będzie skutkowało wyświetleniem komunikatu o niepoprawnym identyfikatorze operacji.
Dokumentacja opisuje działanie oprogramowania w wersji z dnia 19-01-2022.

